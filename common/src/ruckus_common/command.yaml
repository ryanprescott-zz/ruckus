│ > I want to implement job-related functionality in the ruckus server, including router endpoints, backend functionality, model updates, etc.   │
│   To get started, I would like to add a new endpoint to the jobs router in src/ruckus_server/api/v1/routers/jobs.py: POST /api/v1/jobs/ to     │
│   create a new job. The endpoint takes an instance of CreateJobRequest - a new model class in src/ruckus_server/api/v1/models.py that          │
│   contains the following fields: A. experiment_id: str - the ID of the experiment to run in the job. B. agent_id: str - the ID of the Agent    │
│   that will run the job. When the endpoint is called, it calls the create_job method on a new class: JobManager (in                            │
│   src/ruckus_server/core/job_manager.py), passing the experiment_id and agent_id from the CreateJobRequest object. The create_job method does  │
│   the following 1. calls the configured StorageBackend (configured in the JobManager start() methdod, following the pattern of the             │
│   AgentManager and ExperimentManager by calling the storage_factory.create_storage_backend() method with the setting specifing the backend to  │
│   use) to retrieve the experiment with the provided experiment_id. If no experiment with the provided ID is found in the storage backend,      │
│   the method raises an exception signaling the endpoint to return a 404 message. Otherwise, the method next retrieves RegisteredAgentInfo      │
│   from the storage backend for the agent matching the provided agent_id. If no agent is found matching the provided ID, the method raises an   │
│   exception signaling the endpoint to return a 404 message. Otherwise, next the method calls the agent's /status endpoint by passing the       │
│   agent URL from the registered agent info to a new method on the AgentUtility: get_agent_status(). If the returned AgentStatus object has a   │
│   status enum of idle, the method calls the Agent's  2. Refactor the GET /api/v1/jobs/ endpoint (which provides information on the current     │
│   jobs known to the server) to return an instance of JobListResponse - a new model class (in server/src/ruckus_server/api/v1/models)           │
│   containing a list of JobStatus objects (one per job). The JobStatus class is a refactered version of the existing JobStatus enum class  in   │
│   server/src/ruckus_server/core/models.py) The refactored JobStatus class contains the following fields: A. status: JobStatusEnum - the        │
│   renamed enum class that is currently named JobStatus. B. experiment_id: str - the ID of the experiment the job is running. C. agent_id: str  │
│   - The id of the Agent the job is running in, D. start_time: datetime - the timestamp when the job was started by the agent. E. timestamp:    │
│   datetime - the time of the status. WHen the endpoint is called, it  